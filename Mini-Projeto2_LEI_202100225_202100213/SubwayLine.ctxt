#BlueJ class context
comment0.target=SubwayLine
comment0.text=\r\n\ Classe\ que\ representa\ uma\ linha\ de\ metro.\r\n\r\n\ @author\ Grupo3\ (Andr\u00E9\ Meseiro\ -\ 202100225\ 202100225@estudantes.ips.pt\ e\ Rodrigo\ Elias\ -\ 202100213\ 202100213@estudantes.ipt.pt)\r\n\ @version\ 18/12/2021\r\n
comment1.params=code\ color\ stations
comment1.target=SubwayLine(char,\ java.lang.String,\ Station[])
comment1.text=\r\n\ Construtor\ da\ classe\ SubwayLine.\ Recebe\ o\ c\u00F3digo,\ a\ cor\ de\ designa\u00E7\u00E3o\ da\ linha\ e\ o\ conjunto\ de\ esta\u00E7\u00F5es\ que\ fazem\ parte\ da\ mesma.\r\n\r\n\ @param\ code\ -\ c\u00F3digo\ identificativo\ da\ linha\r\n\ @param\ color\ -\ cor\ representante\ da\ linha\r\n\ @param\ stations\ -\ esta\u00E7\u00F5es\ que\ comp\u00F5em\ a\ linha\r\n
comment10.params=stationName
comment10.target=Station\ getStationInLine(java.lang.String)
comment10.text=\r\n\ Devolve\ uma\ esta\u00E7\u00E3o\ existente\ nesta\ linha,\ a\ partir\ do\ seu\ nome.\r\n\ \r\n\ @param\ stationName\ -\ nome\ da\ esta\u00E7\u00E3o\r\n\ @return\ esta\u00E7\u00E3o,\ caso\ exista\r\n
comment11.params=position
comment11.target=Station\ getStationInPosition(int)
comment11.text=\r\n\ Devolve\ uma\ esta\u00E7\u00E3o\ existente\ nesta\ linha,\ a\ partir\ da\ sua\ posi\u00E7\u00E3o.\r\n\ \r\n\ @param\ position\ -\ posi\u00E7\u00E3o\ da\ esta\u00E7\u00E3o\r\n\ @return\ esta\u00E7\u00E3o\ localizada\ nessa\ posi\u00E7\u00E3o\r\n
comment12.params=
comment12.target=void\ showSubwayLineInfo()
comment12.text=\r\n\ Mostra\ informa\u00E7\u00E3o\ sobre\ a\ linha\ de\ metro.\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment2.params=
comment2.target=char\ getCode()
comment3.params=
comment3.target=java.lang.String\ getColor()
comment4.params=
comment4.target=Station[]\ getStations()
comment5.params=newCode
comment5.target=void\ setCode(char)
comment6.params=newColor
comment6.target=void\ setColor(java.lang.String)
comment7.params=stationName
comment7.target=boolean\ haveStation(java.lang.String)
comment7.text=\r\n\ Verifica\ se\ determinada\ esta\u00E7\u00E3o\ pertence\ a\ esta\ linha.\r\n\r\n\ @param\ stationName\ -\ nome\ da\ esta\u00E7\u00E3o\ a\ verificar\r\n\ @return\ o\ sucesso\ da\ opera\u00E7\u00E3o.\ true\ caso\ perten\u00E7a,\ false\ caso\ contr\u00E1rio.\r\n\r\n
comment8.params=firstStation\ secondStation
comment8.target=boolean\ haveTwoStations(java.lang.String,\ java.lang.String)
comment8.text=\r\n\ Verifica\ se\ duas\ esta\u00E7\u00F5es\ pertencem\ a\ esta\ linha.\r\n\r\n\ @param\ firstStation\ -\ nome\ da\ primeira\ esta\u00E7\u00E3o\ a\ verificar\r\n\ @param\ secondStation\ -\ nome\ da\ segunda\ esta\u00E7\u00E3o\ a\ verificar\r\n\ @return\ o\ sucesso\ da\ opera\u00E7\u00E3o.\ true\ caso\ perten\u00E7am,\ false\ caso\ contr\u00E1rio\r\n
comment9.params=stationName
comment9.target=int\ stationPositionInLine(java.lang.String)
comment9.text=\r\n\ Determina,\ caso\ exista,\ em\ que\ posi\u00E7\u00E3o\ se\ encontra\ determinada\ esta\u00E7\u00E3o\ nesta\ linha.\r\n\r\n\ @param\ stationName\ -\ nome\ da\ esta\u00E7\u00E3o\ a\ determinar\ posi\u00E7\u00E3o\r\n\ @return\ a\ posi\u00E7\u00E3o\ em\ que\ a\ esta\u00E7\u00E3o\ se\ encontra\r\n
numComments=14
